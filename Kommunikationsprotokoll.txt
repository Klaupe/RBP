Remote Blackboard Protocol RBP v1 (auf TCP aufbauend)
von Lukas Rauch

minsize:              2 Byte
maxsize:      4.161.665 Byte
Default Port:     42042
Strings:          UTF-8 (nicht nullterminiert)

    0        1        2        3
+--------+--------+--------+--------+
|  TYPE  | #PARAM | opt PARAMLENGTH | Bytes 1-4
|        |        |                 |
+--------+--------+--------+--------+
|   opt (varlength) PARAMCONTENT    | Bytes 5-8
|                                   |
+--------+--------+--------+--------+
| opt PARAMLENGTH | opt (varlength) | Bytes 9-12
|                 |   PARAMLENGTH   |
+--------+--------+--------+--------+

FIELD DESCRIPTION

- TYPE -

  7 6 5 4 3 2 1 0
+-.-.-.-.-.-.-.-.-+
| E R MESSAGETYPE |
+-.-.-.-.-.-.-.-.-+

E -> Encryption Flag (1 bit)
     0 nicht verschlüsselt
     1 verschlüsselt

R -> Response Flag (1 bit)
     0 bei Anfrage
     1 bei Antwort

bei Anfrage
MESSAGETYPE -> (6 bit)
     0 DO NOTHING (0 parameters)
     1 CREATE (1 parameters)
     2 DISPLAY (2 parameters)
     3 READ (1 parameters)
     4 CLEAR (1 parameters)
     5 STATUS (1 parameter)
     6 DELETE (1 parameters)
     7 DELETEALL (0 parameters)
     33 ENCRYPT-REQUEST (1 parameters)
     34 DISABLE-ENCRYPTION (0 parameters)

bei Antwort
MESSAGETYPE -> (6 bit)
     0 DID NOTHING (0 parameters)
     1 Blackboard erfolgreich erstellt (0 parameters)
     2 Blackboard erfolgreich geleert (0 parameters)
     3 Status erfolgreich gelesen (1 parameters)
     4 Nachricht erfolgreich gelesen (1 parameters)
     17 Blackboard existiert schon (0 parameters)
     18 Blackboard ist leer (0 parameters)
     19 Blackboard existiert nicht (0 parameters)
     33 Verschlüsselung aktiviert (1 parameters)
     34 Verschlüsselung nicht aktiviert (0 parameters)
     62 Anfrage nicht unterstützt (0 parameters)
     63 Interner Fehler (0 parameters)

- #PARAM -

  7 6 5 4 3 2 1 0
+-.-.-.-.-.-.-.-.-+
| ___NUMPARAMS___ |
+-.-.-.-.-.-.-.-.-+

NUMPARAMS -> Anzahl der Parameter (8 bit)
     minvalue: 0
     maxvalue: 127
     Definiert die Anzahl der "opt PARAMLENGTH" und "opt (varlength) PARAMCONTENT" Felder

- opt PARAMLENGTH -

 151413121110 9 8 7 6 5 4 3 2 1 0
+-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-+
| __________PARAMLENGTH__________ |
+-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-+

PARAMLENGTH -> Länge des Parameters (16 bit LE)
     minvalue: 0
     maxvalue: 32767
     Definiert die Länge des nachfolgenden "opt (varlength) PARAMCONTENT" Feldes

- opt (varlength) PARAMCONTENT -

+-.-.-.-.-.-.-.-...
| PARAMCONTENT__
+-.-.-.-.-.-.-.-...

PARAMCONTENT -> Inhalt des Parameters (beliebige Länge)
     Länge in vorherigem "opt PARAMLENGTH" Feld spezifiziert

- VERSCHLÜSSELUNG -

Das erste Byte wird nicht verschlüsselt, nur der Rest der Anfrage.
Durch AES werden Anfragen auf n*16+1 Byte mit Zufallsdaten aufgefüllt, Datenmüll am Ende spielt für das Protokoll keine Rolle.

Client bekommt public RSA key des Servers.
Server hat einen private RSA key.

ENCRYPTION-FLAG wird gesetzt, sobald Daten mit AES verschlüsselt versendet werden.
Server meldet Antwort 34 falls Client das Flag setzt, aber die Verschlüsselung nicht initiiert hat.
Sobald Client Verschlüsselung initiiert hat antwortet Server immer verschlüsselt, auch wenn Client unverschlüsselte Anfragen stellt.

Aufbau einer Verbindung:
- Client sendet Anfrage 33 mit public RSA key des Servers verschlüsselt, Parameter ist ein key für die Symmetrische Verschlüsselung (AES)
- Server antwortet mit 33 bei Akzeptanz (bereits symmetrisch verschlüsselt)
- Server antwortet mit 34 falls Verschlüsselung nicht unterstützt oder Fehler (unverschlüsselt)

Abbau einer Verbindung:
- Client sendet Anfrage 34 (symmetrisch verschlüsselt)
- Server antwortet mit 34 egal ob Verschlüsselung bereits aktiviert wurde oder nicht (unverschlüsselt)
